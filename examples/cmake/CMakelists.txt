cmake_minimum_required(VERSION 3.0.0)
project(practice-cmake VERSION 0.1.0)

set(CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS True)

message("  Root Test Session")

set(t1 1.0)
message(${t1})

if(t1 GREATER 1.0)
    message("t1 > 1.0")
else()
    message("t1 <= 1.0")
endif()


if (APPLE)
    message("apple")
elseif (WIN32)
    message("win32")
elseif (UNIX)
    message("unix")
endif()

message("top:   PROJECT_SOURCE_DIR          = ${PROJECT_SOURCE_DIR}") 
message("top:	CMAKE_SOURCE_DIR		    = ${CMAKE_SOURCE_DIR}")
message("top:	CMAKE_BINARY_DIR	 	    = ${CMAKE_BINARY_DIR}")
message("top:	CMAKE_CURRENT_SOURCE_DIR	= ${CMAKE_CURRENT_SOURCE_DIR}")
message("top:	CMAKE_CURRENT_BINARY_DIR	= ${CMAKE_CURRENT_BINARY_DIR}")
message("top:	CMAKE_CURRENT_LIST_DIR		= ${CMAKE_CURRENT_LIST_DIR}")
message("top:	CMAKE_CURRENT_LIST_FILE	    = ${CMAKE_CURRENT_LIST_FILE}")
message("top:	CMAKE_CURRENT_SOURCE_DIR	= ${CMAKE_CURRENT_SOURCE_DIR}")
message("top:	CMAKE_CURRENT_BINARY_DIR	= ${CMAKE_CURRENT_BINARY_DIR}")
message("top:   CMAKE_INSTALL_BINDIR  		= ${CMAKE_INSTALL_BINDIR}")

message("----------------------------------------")
message("top var: CMAKE_BUILD_TYPE          = ${CMAKE_BUILD_TYPE}")
message("top var: CMAKE_CONFIGURATION_TYPES = ${CMAKE_CONFIGURATION_TYPES}")
message("top var: ENV{HOME} = $ENV{HOME}")


# cmake --build . --target hello_world
add_custom_target(hello_world
    COMMAND echo "hello world";
            echo "hello world second" 
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
)

add_custom_target(write_hello_world
    COMMAND echo hello world > ${CMAKE_CURRENT_SOURCE_DIR}/write_hello_world.txt
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
)

message("  Root Test Session End")

set(CMAKE_VERBOSE_MAKEFILE ON)

set(CMAKE_OSX_ARCHITECTURES arm64)

set(RPATH_TEST False)

# # specify the C++ standar
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_POSITION_INDEPENDENT_CODE ON)
set(CMAKE_C_COMPILER_FORCED TRUE)

# set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}")         # lib and exe save into this path
# set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin/")    # exe save into this path
# set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib/")    # lib save into this path

if(NOT CMAKE_CONFIGURATION_TYPES)
    if(NOT CMAKE_BUILD_TYPE)
        message(STATUS "Setting build type to 'Release' as none was specified.")
        set_property(CACHE CMAKE_BUILD_TYPE PROPERTY VALUE "Release")
    endif()
endif()

include(third-party/mathmatics.cmake)
add_subdirectory(src/ )

if (RPATH_TEST)
    set(CMAKE_SKIP_BUILD_RPATH FALSE)
    set(CMAKE_BUILD_WITH_INSTALL_RPATH FALSE)
    SET(CMAKE_INSTALL_RPATH
            "${CMAKE_INSTALL_RPATH}:$ORIGIN/../lib")
    set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)
    include(third-party/rpathtest.cmake)
endif()